@startuml
class ArrayList {
Object[] elementData
int size()
}

CppInterpreterGenerator ..|> AbstractInterpreterGenerator
TemplateInterpreterGenerator ..|> AbstractInterpreterGenerator
InterpreterGenerator ..|> CppInterpreterGenerator
note on link: define CC_INTERP_ONLY
InterpreterGenerator ..|> TemplateInterpreterGenerator
note on link: define NOT_CC_INTERP

CppInterpreter ..|> AbstractInterpreter
TemplateInterpreter ..|> AbstractInterpreter
Interpreter ..|> CppInterpreter: /#define CC_INTERP_ONLY
Interpreter ..|> TemplateInterpreter: /#define NOT_CC_INTERP


BytecodeInterpreter ...> InterpreterRuntime
CppInterpreter ...> BytecodeInterpreter
TemplateInterpreter ...> InterpreterRuntime

Thread --|> ThreadShadow
JavaThread --|> Thread
NamedThread --|> Thread
WatcherThread --|> Thread

JavaThread ...> OSThread


Parker ..|> PlatformParker
ParkEvent ..|> PlatformEvent
note left of PlatformParker
PlatformParker and PlatformEvent
has same facility:
pthread_cond_timedwait & pthread_cond_wait
end note

markOopDesc --|> oopDesc
instanceOopDesc ..|> oopDesc
arrayOopDesc ..|> oopDesc

note left of markOopDesc
The markOop describes
the header of an object
end note

note left of oopDesc
oopDesc is the top baseclass
for objects classes
end note

note top of instanceOopDesc
An instanceOop is an instance of a Java Class
end note

InstanceClassLoaderKlass ..|> InstanceKlass
InstanceMirrorKlass ..|> InstanceKlass
InstanceRefKlass ..|> InstanceKlass
InstanceKlass ..|> Klass
Klass ..|> Metadata
Method ..|> Metadata
Metadata ..|> MetaspaceObj

MethodData ..|> Metadata
ConstMethod ..|> MetaspaceObj

Method ...> MethodData
Method ...> ConstMethod

note as common_note
  -XX:-UseStackBanging和-XX:-ProfileInterpreter，不生成栈检查和统计相关的汇编代码
  <b>global.h</b>: jvm flag 参数
  <b>javaCalls.cpp</b>: JavaCalls::call native方法中调用java方法
  <b>macroAssembler_x86.cpp</b>: MacroAssembler::call_VM java方法中调用native方法 (模板解释器)
  <b>templateInterpreter_x86_64.cpp</b>: AbstractInterpreterGenerator::generate_method_entry generate_normal_entry generate_native_entry
  javaCalls.cpp
  assembler_x86.cpp
  interp_masm_x86_64.cpp
  interpreterRuntime.cpp
  macroAssembler_x86.cpp
  stubGenerator_x86_64.cpp
  stubGenerator_zero.cpp
  stubRoutines.cpp
  templateInterpreter_x86_64.cpp
  templateTable_x86_64.cpp

  <u>also</u> <color:royalBlue>on several</color> <s>words</s> lines
  Class13 --> Class14
  Class15 ..> Class16
  Class17 --|> Class18
  Class19 *--> Class20
end note
@enduml
