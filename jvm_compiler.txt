中间代码
两种中间表示形式:
树型结构，包括语法分析树和(抽象)语法树
线性表示形式，特别是“三地址代码”
把组成程序的很长的三地址码序列分解为“基本块”。所谓基本块就是一个总是逐个顺序执行的语句序列，执行时不会出现分支跳跃。

三地址码
x = y OP z
其中x、y和z可以是名字、常量或由编译器生成的临时量；而op表示一个运算符指令。
数组操作: x [ y ] = z
跳转指令码: ifFalse x goto L
从抽象语法树翻译出三地址码，不需要为标识符和常量生成任何代码
四元表示形式
三元表示形式
静态单赋值形式
和三地址码形式的两个主要区别:
1、赋值都是针对具有不同名字的变量，对p的多次赋值用下标进行区分p1、p2、p3
2、SSA使用一种函数的表示规则将x的两处条件赋值合并起来，x = f(t1, t2) => if condition is true x = t1 else x = t2
